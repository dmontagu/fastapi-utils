[tool.poetry]
name = "fastapi-restful"
version = "0.5.0"
description = "Quicker FastApi developing tools"
license = "MIT"
authors = ["Yuval Levi <yuvall9313@gmail.com>"]
readme = "README.md"
homepage = "https://fastapi-restful.netlify.app"
repository = "https://github.com/yuval9313/FastApi-RESTful"
documentation = "https://fastapi-restful.netlify.app"
keywords = ["fastapi", "OOP", "RESTful"]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Utilities"
]

[tool.poetry.dependencies]
python = "^3.7"

fastapi = ">=0.89,<1.0"
pydantic = ">1.0, <3.0"
sqlalchemy =  { version = ">=1.4,<3.0", optional = true }
psutil = "^5"
pydantic-settings = { version= "^2.0.1", optional = true }
typing-inspect = { version = "^0.9.0", optional = true}

[tool.poetry.dev-dependencies]
# Starlette features
aiofiles = "*"  # Serving static files
httpx = "*"  # TestClient

# Testing
pytest = "^7.0"
pytest-cov = "*"
pytest-asyncio = "*"
coverage = "*"
mock = { version = "*", python = "<3.8" }
types-mock = { version = "*", python = "<3.8" }


# Static
ruff = "*"
black = { version = "*", allow-prereleases = true }
mypy = "*"
sqlalchemy-stubs = "*"
types-setuptools = "*"  # for pkg_resources import

# Documentation
mkdocs = "*"
mkdocs-material = "*"
markdown-include = "*"
autoflake = "^1.4"

[tool.poetry.extras]
all = ["sqlalchemy", "pydantic-settings", "typing-inspect"]
session = ["sqlalchemy"]

[tool.black]
line-length = 120
target_version = ['py39']
include = '\.pyi?$'
exclude = '''
(
  /(
    \.git
    | \.mypy_cache
    | \.pytest_cache
    | htmlcov
    | build
  )/
)
'''

[tool.ruff]
line-length = 120
extend-select = ['RUF100', 'C90', 'I']
isort = { known-first-party = ['FastApi-RESTful', 'tests'] }


[tool.coverage.run]
source = ["fastapi_restful"]
branch = true

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "raise NotImplemented",
    "@overload",
    "if TYPE_CHECKING:",
    'if __name__ == "__main__":'
]

[tool.pytest.ini_options]
testpaths = "tests"
filterwarnings = "ignore:.*The explicit passing of coroutine objects to asyncio.wait()*:DeprecationWarning"


[tool.mypy]
plugins = "pydantic.mypy,sqlmypy"

follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
ignore_missing_imports = true
disallow_untyped_defs = true

[tool.poetry-version-plugin]
source = "init"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
